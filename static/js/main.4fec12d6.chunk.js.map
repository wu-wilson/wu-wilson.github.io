{"version":3,"sources":["Pages/Home.tsx","Pages/About.tsx","Pages/Projects.tsx","Pages/Contact.tsx","Components/ContactBar.tsx","Components/Navbar/ToggleTheme.tsx","Components/Navbar/Logo.svg","Components/Navbar/HamMenu.tsx","Components/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","theme","className","style","background","color","href","paragraphs","id","content","About","getHere","onClick","window","open","abtRedirect","icon","map","paragraph","projects","name","description","tools","git","launch","Projects","handleIconClick","project","getMargin","getHeaderIcon","Contact","ContactBar","redirect","backgroundColor","ToggleTheme","setTheme","type","HamMenu","getScrollLink","useState","setOpen","useEffect","disableScroll","on","off","closeMenu","getScrollLinkHM","section","to","smooth","duration","navItems","item","getSymbol","symbol","Navbar","navBar","setNavBar","scrollLocation","setScrollLocation","prevScrollLocation","setPrevScrollLocation","translateNavbar","useCallback","pageYOffset","addEventListener","removeEventListener","borderBottom","top","src","logo","alt","scroller","scrollToTop","App","loading","setLoading","storedTheme","localStorage","getItem","JSON","parse","setItem","stringify","scrollTop","scrollTo","left","behavior","borderTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA0CeA,EAxCF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MACd,OACE,qBACEC,UAAU,OACVC,MAAO,CACLC,WAAW,GAAD,OACE,UAAVH,EAAoB,yBAA2B,wBAJrD,SAQE,sBAAKC,UAAU,WAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,cAChC,qBAAKA,UAAU,eAAf,gCACA,qBACEA,UAAU,OACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,wBAMA,qBACEC,UAAU,cACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,0FAOA,mBAAGC,UAAU,cAAcI,KAAK,sBAAhC,SACE,wBACEJ,UAAS,qBACG,UAAVD,EAAoB,YAAc,YAFtC,4B,+BChBJM,EAA0B,CAC9B,CACEC,GAAI,EACJC,QACE,kHAEJ,CACED,GAAI,EACJC,QACE,+IAEJ,CACED,GAAI,EACJC,QAAS,8DA2FEC,EAvFD,SAAC,GAAkC,IAAhCT,EAA+B,EAA/BA,MAETU,EAAU,SAACH,GACf,GAAW,IAAPA,EACF,OACE,uBACEN,UAAU,OACVU,QAAS,kBAAMC,OAAOC,KAAK,iCAF7B,UAIG,IAJH,YAYAC,EAAc,SAACC,GACnB,OAAQA,GACN,IAAK,QACHH,OAAOC,KAAK,wBACZ,MACF,IAAK,OACHD,OAAOC,KAAK,0BACZ,MACF,IAAK,MACHD,OAAOC,KAAK,0BACZ,MACF,IAAK,KACHD,OAAOC,KAAK,+BACZ,MACF,IAAK,KACHD,OAAOC,KAAK,qCAKlB,OACE,qBACEN,GAAG,QACHN,UAAU,QACVC,MAAO,CACLC,WAAW,GAAD,OAAe,UAAVH,EAAoB,uBAAyB,YAJhE,SAOE,sBAAKC,UAAU,YAAf,UACE,cAAC,IAAD,CAAqBA,UAAU,cAC/B,qBACEA,UAAU,WACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,uBAMCM,EAAWU,KAAI,SAACC,GAAD,OACd,sBACEhB,UAAU,YAEVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAHnD,UAKGiB,EAAUT,QACVE,EAAQO,EAAUV,MAJdU,EAAUV,OAOnB,sBAAKN,UAAU,iBAAf,UACE,cAAC,IAAD,CACEA,UAAU,aACVU,QAAS,kBAAMG,EAAY,YAE7B,cAAC,IAAD,CACEb,UAAU,aACVU,QAAS,kBAAMG,EAAY,WAE7B,cAAC,IAAD,CAASb,UAAU,aAAaU,QAAS,kBAAMG,EAAY,UAC3D,cAAC,IAAD,CACEb,UAAU,aACVU,QAAS,kBAAMG,EAAY,SAE7B,cAAC,IAAD,CACEb,UAAU,gBACVU,QAAS,kBAAMG,EAAY,kB,8BC5FjCI,EAAsB,CAC1B,CACEX,GAAI,EACJY,KAAM,gBACNC,YACE,uFACFC,MAAO,+DACPC,IAAK,6CACLC,OAAQ,+CAEV,CACEhB,GAAI,EACJY,KAAM,qBACNC,YACE,qFACFC,MAAO,oBACPC,IAAK,kDACLC,OAAQ,oDA0EGC,EAtEE,SAAC,GAAkC,IAAhCxB,EAA+B,EAA/BA,MAGZyB,EAAkB,SAACV,EAAcW,GACxB,QAATX,EACFH,OAAOC,KAAKa,EAAQJ,KAEpBV,OAAOC,KAAKa,EAAQH,SAMlBI,EAAY,SAACpB,GACjB,GAAIA,EAAK,EACP,MAAO,cAKLqB,EAAgB,SAACF,GACrB,MAAgB,kBAAZA,EACK,cAAC,IAAD,CAAezB,UAAU,gBACX,uBAAZyB,EACF,cAAC,IAAD,CAAazB,UAAU,qBADzB,GAKT,OACE,qBACEM,GAAG,WACHN,UAAU,WACVC,MAAO,CAAEC,WAAW,GAAD,OAAe,UAAVH,EAAoB,UAAY,YAH1D,SAKE,sBAAKC,UAAU,eAAf,UACE,cAAC,IAAD,CAAQA,UAAU,cAClB,qBACEA,UAAU,kBACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,8BAMA,qBAAKC,UAAU,qBAAf,SACGiB,EAASF,KAAI,SAACU,GAAD,OACZ,sBAEEzB,UAAS,kBAAa0B,EAAUD,EAAQnB,KAF1C,UAIGqB,EAAcF,EAAQP,MACtBO,EAAQP,KACT,qBAAKlB,UAAU,kBAAf,SAAkCyB,EAAQN,cAC1C,qBAAKnB,UAAU,QAAf,SAAwByB,EAAQL,QAChC,sBAAKpB,UAAU,qBAAf,UACE,cAAC,IAAD,CACEA,UAAU,WACVU,QAAS,kBAAMc,EAAgB,MAAOC,MAExC,cAAC,IAAD,CACEzB,UAAU,WACVU,QAAS,kBAAMc,EAAgB,SAAUC,WAdxCA,EAAQnB,eC7CZsB,EApCC,SAAC,GAAkC,IAAhC7B,EAA+B,EAA/BA,MAMjB,OACE,qBACEO,GAAG,UACHN,UAAU,UACVC,MAAO,CAAEC,WAAW,GAAD,OAAe,UAAVH,EAAoB,QAAU,YAHxD,SAKE,sBAAKC,UAAU,cAAf,UACE,cAAC,IAAD,CAAMA,UAAU,YAChB,qBACEA,UAAU,UACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,4BAMA,qBACEC,UAAU,eACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,uKAQA,wBAAQC,UAAU,UAAUU,QA1BjB,WACfC,OAAOC,KAAK,mCAyBR,2BCUOiB,EAtCI,SAAC,GAAkC,IAAhC9B,EAA+B,EAA/BA,MAEd+B,EAAW,SAAChB,GAChB,OAAQA,GACN,IAAK,MACHH,OAAOC,KAAK,gCACZ,MACF,IAAK,KACHD,OAAOC,KAAK,wCACZ,MACF,IAAK,OACHD,OAAOC,KAAK,kCACZ,MACF,IAAK,KACHD,OAAOC,KAAK,6CAKlB,OACE,sBACEZ,UAAU,eACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,UAAY,YAFrD,UAIE,cAAC,IAAD,CAAUC,UAAU,UAAUU,QAAS,kBAAMoB,EAAS,UACtD,cAAC,IAAD,CAAY9B,UAAU,UAAUU,QAAS,kBAAMoB,EAAS,SACxD,cAAC,IAAD,CAAQ9B,UAAU,UAAUU,QAAS,kBAAMoB,EAAS,WACpD,cAAC,IAAD,CAAa9B,UAAU,UAAUU,QAAS,kBAAMoB,EAAS,SACzD,qBACE9B,UAAU,MACVC,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,UAAY,kB,QCU/CiC,EAzCK,SAAC,GAMd,IALLjC,EAKI,EALJA,MACAkC,EAII,EAJJA,SAcA,OACE,wBAAOjC,UAAU,SAAjB,UACE,uBAAOkC,KAAK,aACZ,sBACElC,UAAS,iBAAsB,UAAVD,EAAoB,KAAO,eAChDW,QAbc,WAEhBuB,EADY,UAAVlC,EACO,OAEA,UAOT,SAIE,sBACEC,UAAS,iBAAsB,UAAVD,EAAoB,KAAO,gBAChDE,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,YAHtD,UAME,cAAC,IAAD,CACEC,UAAS,kBAAuB,UAAVD,EAAoB,KAAO,eAEnD,cAAC,IAAD,CACEC,UAAS,kBAAuB,UAAVD,EAAoB,YAAc,iBCnCrD,MAA0B,iC,eCuH1BoC,EAjHC,SAAC,GAQV,IAPLpC,EAOI,EAPJA,MACAkC,EAMI,EANJA,SAQA,GAFI,EALJG,cAOwBC,oBAAkB,IAA1C,mBAAOzB,EAAP,KAAa0B,EAAb,KASAC,qBAAU,WACJ3B,EACF4B,IAAcC,KAEdD,IAAcE,QAEf,CAAC9B,IAGJ,IAAM+B,EAAY,WAChBL,GAAQ,IAKJM,EAAkB,SAACC,GACvB,OAAQA,GACN,IAAK,QACH,OACE,cAAC,OAAD,CAAMC,GAAG,QAAQC,QAAQ,EAAMC,SAAU,IAAKtC,QAASiC,EAAvD,mBAIJ,IAAK,WACH,OACE,cAAC,OAAD,CAAMG,GAAG,WAAWC,QAAQ,EAAMC,SAAU,IAAKtC,QAASiC,EAA1D,sBAIJ,IAAK,UACH,OACE,cAAC,OAAD,CAAMG,GAAG,UAAUC,QAAQ,EAAMC,SAAU,IAAKtC,QAASiC,EAAzD,uBAOR,OACE,sBAAK3C,UAAU,eAAf,UACE,sBAAKA,UAAU,iBAAiBU,QA7ChB,WAClB4B,GAAS1B,IA4CP,UACE,qBACEZ,UAAU,OACVC,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,YAGtD,qBACEC,UAAU,OACVC,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,YAGtD,qBACEC,UAAU,OACVC,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,eAIxD,qBACEC,UAAS,kBAAaY,EAAO,OAAS,MACtCX,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,UAAY,YAHxD,SAME,sBAAKC,UAAU,SAAf,UACGiD,EAASlC,KAAI,SAACmC,GAAD,OACZ,qBAAKlD,UAAU,oBAAf,SACE,sBACEA,UAAU,UACVC,MAAO,CAAEE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAFnD,UAIG6C,EAAgBM,EAAK3C,SACtB,qBACEP,UAAU,YACVC,MAAO,CACLE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,UAAY,YAH9C,SAMGoD,EAAUD,EAAKE,cAZkBF,EAAK5C,OAiB/C,qBAAKN,UAAU,UAAf,SACE,cAAC,EAAD,CAAaD,MAAOA,EAAOkC,SAAUA,eC/FpCgB,EAAsB,CACjC,CACE3C,GAAI,EACJC,QAAS,QACT6C,OAAQ,QAEV,CACE9C,GAAI,EACJC,QAAS,WACT6C,OAAQ,QAEV,CACE9C,GAAI,EACJC,QAAS,UACT6C,OAAQ,OAKCD,EAAY,SAACC,GACxB,OAAQA,GACN,IAAK,OACH,OAAO,cAAC,IAAD,IACT,IAAK,OACH,OAAO,cAAC,IAAD,IACT,IAAK,KACH,OAAO,cAAC,IAAD,MAsHEC,EAlHA,SAAC,GAMT,IALLtD,EAKI,EALJA,MACAkC,EAII,EAJJA,SAMA,EAA4BI,oBAAkB,GAA9C,mBAAOiB,EAAP,KAAeC,EAAf,KAGA,EAA4ClB,mBAAiB,GAA7D,mBAAOmB,EAAP,KAAuBC,EAAvB,KACA,EAAoDpB,mBAAiB,GAArE,mBAAOqB,EAAP,KAA2BC,EAA3B,KAIMC,EAAkBC,uBAAY,WAClCJ,EAAkB9C,OAAOmD,aAGrBP,IAFAC,EAAiBE,MACfF,GAAkB,IAQxBG,EAAsBH,KACrB,CAACE,EAAoBF,IAGxBjB,qBAAU,WAER,OADA5B,OAAOoD,iBAAiB,SAAUH,GAC3B,WACLjD,OAAOqD,oBAAoB,SAAUJ,MAEtC,CAACA,IAGJ,IAKMxB,EAAgB,SAACS,GACrB,OAAQA,GACN,IAAK,QACH,OACE,cAAC,OAAD,CAAMC,GAAG,QAAQC,QAAQ,EAAMC,SAAU,IAAzC,mBAIJ,IAAK,WACH,OACE,cAAC,OAAD,CAAMF,GAAG,WAAWC,QAAQ,EAAMC,SAAU,IAA5C,sBAIJ,IAAK,UACH,OACE,cAAC,OAAD,CAAMF,GAAG,UAAUC,QAAQ,EAAMC,SAAU,IAA3C,uBAOR,OACE,sBACEhD,UAAU,eACVC,MAAO,CACLgE,aAAa,GAAD,OACA,UAAVlE,EAAoB,sBAAwB,qBAE9CgC,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,WAClDmE,IAAKZ,EAAS,GAAK,IAPvB,UAUE,cAAC,EAAD,CACEvD,MAAOA,EACPkC,SAAUA,EACVG,cAAeA,IAEjB,qBAAKpC,UAAU,iBAAf,SACE,qBAAKmE,IAAKC,EAAMC,IAAI,OAAO3D,QA7Cd,WACjB4D,gBAASC,YAAY,CAAEvB,SAAU,WA8C/B,qBAAKhD,UAAU,qBAAf,SACGiD,EAASlC,KAAI,SAACmC,GAAD,OACZ,sBACElD,UAAU,oBAEVC,MAAO,CACLE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,UAAY,YAJ9C,UAOGoD,EAAUD,EAAKE,QAChB,qBACEpD,UAAU,UACVC,MAAO,CACLE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAH5C,SAMGqC,EAAcc,EAAK3C,aAZjB2C,EAAK5C,SAiBhB,qBAAKN,UAAU,eAAf,SACE,cAAC,EAAD,CAAaD,MAAOA,EAAOkC,SAAUA,UCxE9BuC,G,MAzEH,WAEV,MAA8BnC,oBAAkB,GAAhD,mBAAOoC,EAAP,KAAgBC,EAAhB,KAGA,EAA0BrC,mBAAiB,SAA3C,mBAAOtC,EAAP,KAAckC,EAAd,KAGAM,qBAAU,WACR,IAAMoC,EAAcC,aAAaC,QAAQ,SACrCF,GACF1C,EAAS6C,KAAKC,MAAMJ,MAErB,IAGHpC,qBAAU,WACRqC,aAAaI,QAAQ,QAASF,KAAKG,UAAUlF,MAC5C,CAACA,IAGJ,IAAMmF,EAAY,WAChBvE,OAAOwE,SAAS,CAAEjB,IAAK,EAAGkB,KAAM,EAAGC,SAAU,SAC7CX,GAAW,IAIbnC,qBAAU,WAGR,OAFA5B,OAAOoD,iBAAiB,eAAgBmB,GACxCR,GAAW,GACJ,WACL/D,OAAOqD,oBAAoB,eAAgBkB,MAE5C,IASH,OAAOT,EAAU,KACf,sBAAKzE,UAAU,gBAAf,UACE,cAAC,EAAD,CAAYD,MAAOA,IACnB,cAAC,EAAD,CAAQA,MAAOA,EAAOkC,SAAUA,IAChC,cAAC,EAAD,CAAMlC,MAAOA,IACb,cAAC,EAAD,CAAOA,MAAOA,IACd,cAAC,EAAD,CAAUA,MAAOA,IACjB,cAAC,EAAD,CAASA,MAAOA,IAChB,wBACEC,UAAU,SACVC,MAAO,CACL8B,gBAAgB,GAAD,OAAe,UAAVhC,EAAoB,QAAU,WAClDuF,UAAU,GAAD,OACG,UAAVvF,EAAoB,sBAAwB,sBALlD,SASE,qBACEC,UAAU,cACVU,QAzBS,WACfC,OAAOC,KAAK,qDAyBNX,MAAO,CACLE,MAAM,GAAD,OAAe,UAAVJ,EAAoB,QAAU,UAJ5C,oECtDOwF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.4fec12d6.chunk.js","sourcesContent":["import { RiQuestionAnswerLine } from \"react-icons/ri\";\r\n\r\nconst Home = ({ theme }: { theme: string }) => {\r\n  return (\r\n    <div\r\n      className=\"home\"\r\n      style={{\r\n        background: `${\r\n          theme === \"light\" ? \"rgba(219, 248, 255, 1)\" : \"rgba(78, 81, 84, 1)\"\r\n        }`,\r\n      }}\r\n    >\r\n      <div className=\"home-box\">\r\n        <RiQuestionAnswerLine className=\"chat-icon\" />\r\n        <div className=\"home-subtext\">hi there! iâ€™m</div>\r\n        <div\r\n          className=\"name\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          wilson wu.\r\n        </div>\r\n        <div\r\n          className=\"description\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          Iâ€™m an Atlanta-based software engineer. welcome to my space on the\r\n          web!\r\n        </div>\r\n        <a className=\"resume-link\" href=\"wilsonwu-resume.pdf\">\r\n          <button\r\n            className={`resume-btn ${\r\n              theme === \"light\" ? \"light-btn\" : \"dark-btn\"\r\n            }`}\r\n          >\r\n            resume\r\n          </button>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { RiReactjsFill } from \"react-icons/ri\";\r\nimport { DiNodejsSmall, DiJavascript } from \"react-icons/di\";\r\nimport { SiTypescript } from \"react-icons/si\";\r\nimport { GrMysql } from \"react-icons/gr\";\r\n\r\n// Define type paragraph.\r\ntype paragraph = {\r\n  id: number;\r\n  content: string;\r\n};\r\n\r\n// Store the paragraphs displayed in the about section.\r\nconst paragraphs: paragraph[] = [\r\n  {\r\n    id: 0,\r\n    content:\r\n      \"My name is Wilson Wu, and Iâ€™m a rising sophomore at Emory University pursuing a B.S. in computer science.\",\r\n  },\r\n  {\r\n    id: 1,\r\n    content:\r\n      \"Iâ€™ve recently been experimenting with full stack web development! If youâ€™re interested in checking out some of my projects, click\",\r\n  },\r\n  {\r\n    id: 2,\r\n    content: \"Here are a few frameworks/libraries Iâ€™ve been using:\",\r\n  },\r\n];\r\n\r\nconst About = ({ theme }: { theme: string }) => {\r\n  // Return the \"here\" link for the 2nd paragraph.\r\n  const getHere = (id: number) => {\r\n    if (id === 1) {\r\n      return (\r\n        <span\r\n          className=\"here\"\r\n          onClick={() => window.open(\"https://github.com/wu-wilson\")}\r\n        >\r\n          {\" \"}\r\n          here.\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  // When an about icon is clicked, redirect to the appropriate website.\r\n  const abtRedirect = (icon: string) => {\r\n    switch (icon) {\r\n      case \"react\":\r\n        window.open(\"https://reactjs.org/\");\r\n        break;\r\n      case \"node\":\r\n        window.open(\"https://nodejs.org/en/\");\r\n        break;\r\n      case \"sql\":\r\n        window.open(\"https://www.mysql.com/\");\r\n        break;\r\n      case \"js\":\r\n        window.open(\"https://www.javascript.com/\");\r\n        break;\r\n      case \"ts\":\r\n        window.open(\"https://www.typescriptlang.org/\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"about\"\r\n      className=\"about\"\r\n      style={{\r\n        background: `${theme === \"light\" ? \"rgba(255,255,255, 1)\" : \"#2D3133\"}`,\r\n      }}\r\n    >\r\n      <div className=\"about-box\">\r\n        <AiOutlineInfoCircle className=\"info-icon\" />\r\n        <div\r\n          className=\"about-me\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          about me.\r\n        </div>\r\n        {paragraphs.map((paragraph) => (\r\n          <div\r\n            className=\"paragraph\"\r\n            key={paragraph.id}\r\n            style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n          >\r\n            {paragraph.content}\r\n            {getHere(paragraph.id)}\r\n          </div>\r\n        ))}\r\n        <div className=\"icon-container\">\r\n          <RiReactjsFill\r\n            className=\"about-icon\"\r\n            onClick={() => abtRedirect(\"react\")}\r\n          />\r\n          <DiNodejsSmall\r\n            className=\"about-icon\"\r\n            onClick={() => abtRedirect(\"node\")}\r\n          />\r\n          <GrMysql className=\"about-icon\" onClick={() => abtRedirect(\"sql\")} />\r\n          <DiJavascript\r\n            className=\"about-icon\"\r\n            onClick={() => abtRedirect(\"js\")}\r\n          />\r\n          <SiTypescript\r\n            className=\"about-icon ts\"\r\n            onClick={() => abtRedirect(\"ts\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { BiCode } from \"react-icons/bi\";\r\nimport { AiOutlineSync } from \"react-icons/ai\";\r\nimport { ImStatsBars } from \"react-icons/im\";\r\nimport { FiGithub } from \"react-icons/fi\";\r\nimport { VscRocket } from \"react-icons/vsc\";\r\n\r\n// Define type project.\r\ntype project = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  tools: string;\r\n  git: string;\r\n  launch: string;\r\n};\r\n\r\n// Store list of sample projects.\r\nconst projects: project[] = [\r\n  {\r\n    id: 0,\r\n    name: \"Calendar Sync\",\r\n    description:\r\n      \"a productivity web app that creates a shareable calendar which updates in real time.\",\r\n    tools: \"React, Node.js, Express, mySQL, Axios, socket.io, Typescript\",\r\n    git: \"https://github.com/wu-wilson/calendar-sync\",\r\n    launch: \"https://www.youtube.com/watch?v=Xkw4IhYh7L4\",\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Sorting Visualizer\",\r\n    description:\r\n      \"a web app that animates sorting algorithms. Users can adjust speed and array size.\",\r\n    tools: \"React, Typescript\",\r\n    git: \"https://github.com/wu-wilson/sorting-visualizer\",\r\n    launch: \"https://wu-wilson.github.io/sorting-visualizer/\",\r\n  },\r\n];\r\n\r\nconst Projects = ({ theme }: { theme: string }) => {\r\n  /* When the github icon is clicked, launch github. When the rocket\r\n  icon is clicked, launch the web app. */\r\n  const handleIconClick = (icon: string, project: project) => {\r\n    if (icon === \"git\") {\r\n      window.open(project.git);\r\n    } else {\r\n      window.open(project.launch);\r\n    }\r\n  };\r\n\r\n  /* When in tablet/smartphone layout, add a margin above every project after\r\n  the first. */\r\n  const getMargin = (id: number) => {\r\n    if (id > 0) {\r\n      return \"margin-top\";\r\n    }\r\n  };\r\n\r\n  // Get the appropriate header icon depending on the project.\r\n  const getHeaderIcon = (project: string) => {\r\n    if (project === \"Calendar Sync\") {\r\n      return <AiOutlineSync className=\"icon-header\" />;\r\n    } else if (project === \"Sorting Visualizer\") {\r\n      return <ImStatsBars className=\"icon-header\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"projects\"\r\n      className=\"projects\"\r\n      style={{ background: `${theme === \"light\" ? \"#FAFAFA\" : \"#0C2435\"}` }}\r\n    >\r\n      <div className=\"projects-box\">\r\n        <BiCode className=\"code-icon\" />\r\n        <div\r\n          className=\"sample-projects\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          sample projects.\r\n        </div>\r\n        <div className=\"projects-container\">\r\n          {projects.map((project) => (\r\n            <div\r\n              key={project.id}\r\n              className={`project ${getMargin(project.id)}`}\r\n            >\r\n              {getHeaderIcon(project.name)}\r\n              {project.name}\r\n              <div className=\"prj-description\">{project.description}</div>\r\n              <div className=\"tools\">{project.tools}</div>\r\n              <div className=\"prj-icon-container\">\r\n                <FiGithub\r\n                  className=\"prj-icon\"\r\n                  onClick={() => handleIconClick(\"git\", project)}\r\n                />\r\n                <VscRocket\r\n                  className=\"prj-icon\"\r\n                  onClick={() => handleIconClick(\"launch\", project)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import { BiAt } from \"react-icons/bi\";\r\n\r\nconst Contact = ({ theme }: { theme: string }) => {\r\n  // When the connect button is clicked, open their email.\r\n  const openMail = () => {\r\n    window.open(\"mailto:wilson.cui.wu@gmail.com\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"contact\"\r\n      className=\"contact\"\r\n      style={{ background: `${theme === \"light\" ? \"white\" : \"#2D3133\"}` }}\r\n    >\r\n      <div className=\"contact-box\">\r\n        <BiAt className=\"at-icon\" />\r\n        <div\r\n          className=\"connect\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          let's connect.\r\n        </div>\r\n        <div\r\n          className=\"connect-text\"\r\n          style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n        >\r\n          I'm always looking for new opportunities, so feel free to shoot me a\r\n          messageâ€”my inbox is always open! Iâ€™ll get back to you as soon as\r\n          possible.\r\n        </div>\r\n        <button className=\"cnt-btn\" onClick={openMail}>\r\n          connect\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { FiGithub, FiMail, FiLinkedin, FiInstagram } from \"react-icons/fi\";\r\n\r\nconst ContactBar = ({ theme }: { theme: string }) => {\r\n  // When an icon is clicked, redirect to the appropriate link.\r\n  const redirect = (icon: string) => {\r\n    switch (icon) {\r\n      case \"git\":\r\n        window.open(\"https://github.com/wu-wilson\");\r\n        break;\r\n      case \"in\":\r\n        window.open(\"https://www.linkedin.com/in/wils-wu/\");\r\n        break;\r\n      case \"mail\":\r\n        window.open(\"mailto:wilson.cui.wu@gmail.com\");\r\n        break;\r\n      case \"ig\":\r\n        window.open(\"https://www.instagram.com/wilson_wu123/\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cb-container\"\r\n      style={{ color: `${theme === \"light\" ? \"#0eaccf\" : \"#03CBF6\"}` }}\r\n    >\r\n      <FiGithub className=\"cb-icon\" onClick={() => redirect(\"git\")} />\r\n      <FiLinkedin className=\"cb-icon\" onClick={() => redirect(\"in\")} />\r\n      <FiMail className=\"cb-icon\" onClick={() => redirect(\"mail\")} />\r\n      <FiInstagram className=\"cb-icon\" onClick={() => redirect(\"ig\")} />\r\n      <div\r\n        className=\"bar\"\r\n        style={{\r\n          backgroundColor: `${theme === \"light\" ? \"#0eaccf\" : \"#03CBF6\"}`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactBar;\r\n","import { HiSun, HiMoon } from \"react-icons/hi\";\r\n\r\nconst ToggleTheme = ({\r\n  theme,\r\n  setTheme,\r\n}: {\r\n  theme: string;\r\n  setTheme: (theme: string) => void;\r\n}) => {\r\n  // When the toggle theme slider is clicked, change the theme.\r\n  const switchTheme = () => {\r\n    if (theme === \"light\") {\r\n      setTheme(\"dark\");\r\n    } else {\r\n      setTheme(\"light\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" />\r\n      <span\r\n        className={`slider ${theme === \"light\" ? null : \"slider-dark\"}`}\r\n        onClick={switchTheme}\r\n      >\r\n        <div\r\n          className={`toggle ${theme === \"light\" ? null : \"toggle-slide\"}`}\r\n          style={{\r\n            backgroundColor: `${theme === \"light\" ? \"white\" : \"#353535\"}`,\r\n          }}\r\n        >\r\n          <HiSun\r\n            className={`tb-icon ${theme === \"light\" ? null : \"icon-hide\"}`}\r\n          />\r\n          <HiMoon\r\n            className={`tb-icon ${theme === \"light\" ? \"icon-hide\" : null}`}\r\n          />\r\n        </div>\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ToggleTheme;\r\n","export default __webpack_public_path__ + \"static/media/Logo.b831dd52.svg\";","import disableScroll from \"disable-scroll\";\r\nimport ToggleTheme from \"./ToggleTheme\";\r\nimport { navItems, getSymbol } from \"./Navbar\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst HamMenu = ({\r\n  theme,\r\n  setTheme,\r\n  getScrollLink,\r\n}: {\r\n  theme: string;\r\n  setTheme: (theme: string) => void;\r\n  getScrollLink: (section: string) => JSX.Element | undefined;\r\n}) => {\r\n  // Store whether or not the hamburger menu is open.\r\n  const [open, setOpen] = useState<boolean>(false);\r\n\r\n  /* Set open to the appropriate value when the hamburger\r\n  menu is clicked. */\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // If the hamburger menu is open, disable scroll.\r\n  useEffect(() => {\r\n    if (open) {\r\n      disableScroll.on();\r\n    } else {\r\n      disableScroll.off();\r\n    }\r\n  }, [open]);\r\n\r\n  // Close the hamburger menu.\r\n  const closeMenu = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /* Return a link that scrolls to the specified section and closes\r\n   the hamburger menu. */\r\n  const getScrollLinkHM = (section: string) => {\r\n    switch (section) {\r\n      case \"about\":\r\n        return (\r\n          <Link to=\"about\" smooth={true} duration={300} onClick={closeMenu}>\r\n            about\r\n          </Link>\r\n        );\r\n      case \"projects\":\r\n        return (\r\n          <Link to=\"projects\" smooth={true} duration={300} onClick={closeMenu}>\r\n            projects\r\n          </Link>\r\n        );\r\n      case \"contact\":\r\n        return (\r\n          <Link to=\"contact\" smooth={true} duration={300} onClick={closeMenu}>\r\n            contact\r\n          </Link>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hm-container\">\r\n      <div className=\"line-container\" onClick={handleClick}>\r\n        <div\r\n          className=\"line\"\r\n          style={{\r\n            backgroundColor: `${theme === \"light\" ? \"black\" : \"white\"}`,\r\n          }}\r\n        />\r\n        <div\r\n          className=\"line\"\r\n          style={{\r\n            backgroundColor: `${theme === \"light\" ? \"black\" : \"white\"}`,\r\n          }}\r\n        />\r\n        <div\r\n          className=\"line\"\r\n          style={{\r\n            backgroundColor: `${theme === \"light\" ? \"black\" : \"white\"}`,\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        className={`hm-menu ${open ? \"show\" : null}`}\r\n        style={{\r\n          backgroundColor: `${theme === \"light\" ? \"#fafafa\" : \"#2c2c2c\"}`,\r\n        }}\r\n      >\r\n        <div className=\"hm-box\">\r\n          {navItems.map((item) => (\r\n            <div className=\"hm-item-container\" key={item.id}>\r\n              <div\r\n                className=\"hm-item\"\r\n                style={{ color: `${theme === \"light\" ? \"black\" : \"white\"}` }}\r\n              >\r\n                {getScrollLinkHM(item.content)}\r\n                <div\r\n                  className=\"hm-symbol\"\r\n                  style={{\r\n                    color: `${theme === \"light\" ? \"#5F6368\" : \"#979797\"}`,\r\n                  }}\r\n                >\r\n                  {getSymbol(item.symbol)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"hm-item\">\r\n            <ToggleTheme theme={theme} setTheme={setTheme} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HamMenu;\r\n","import ToggleTheme from \"./ToggleTheme\";\r\nimport logo from \"./Logo.svg\";\r\nimport HamMenu from \"./HamMenu\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { BiCode, BiAt } from \"react-icons/bi\";\r\nimport { Link, animateScroll as scroller } from \"react-scroll\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\n\r\n// Define the type navItem, a link in the navbar.\r\ntype navItem = {\r\n  id: number;\r\n  content: string;\r\n  symbol: string;\r\n};\r\n\r\n// List of links in navbar.\r\nexport const navItems: navItem[] = [\r\n  {\r\n    id: 0,\r\n    content: \"about\",\r\n    symbol: \"info\",\r\n  },\r\n  {\r\n    id: 1,\r\n    content: \"projects\",\r\n    symbol: \"code\",\r\n  },\r\n  {\r\n    id: 2,\r\n    content: \"contact\",\r\n    symbol: \"at\",\r\n  },\r\n];\r\n\r\n// Return the appropriate symbol depending on the nav item.\r\nexport const getSymbol = (symbol: string) => {\r\n  switch (symbol) {\r\n    case \"info\":\r\n      return <AiOutlineInfoCircle />;\r\n    case \"code\":\r\n      return <BiCode />;\r\n    case \"at\":\r\n      return <BiAt />;\r\n  }\r\n};\r\n\r\nconst Navbar = ({\r\n  theme,\r\n  setTheme,\r\n}: {\r\n  theme: string;\r\n  setTheme: (theme: string) => void;\r\n}) => {\r\n  // Store whether or not to show the navbar.\r\n  const [navBar, setNavBar] = useState<boolean>(true);\r\n\r\n  // Store the current and previous scroll location.\r\n  const [scrollLocation, setScrollLocation] = useState<number>(0);\r\n  const [prevScrollLocation, setPrevScrollLocation] = useState<number>(0);\r\n\r\n  /* If the user scrolls up, show the navbar. If the user scrolls \r\n  down, hide the navber. */\r\n  const translateNavbar = useCallback(() => {\r\n    setScrollLocation(window.pageYOffset);\r\n    if (scrollLocation > prevScrollLocation) {\r\n      if (scrollLocation >= 0) {\r\n        setNavBar(false);\r\n      } else {\r\n        setNavBar(true);\r\n      }\r\n    } else {\r\n      setNavBar(true);\r\n    }\r\n    setPrevScrollLocation(scrollLocation);\r\n  }, [prevScrollLocation, scrollLocation]);\r\n\r\n  // Adjust the navbar whenever the user scrolls.\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", translateNavbar);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", translateNavbar);\r\n    };\r\n  }, [translateNavbar]);\r\n\r\n  // Scroll to the home div.\r\n  const directHome = () => {\r\n    scroller.scrollToTop({ duration: 400 });\r\n  };\r\n\r\n  // Return a link that scrolls to the specified section.\r\n  const getScrollLink = (section: string) => {\r\n    switch (section) {\r\n      case \"about\":\r\n        return (\r\n          <Link to=\"about\" smooth={true} duration={300}>\r\n            about\r\n          </Link>\r\n        );\r\n      case \"projects\":\r\n        return (\r\n          <Link to=\"projects\" smooth={true} duration={300}>\r\n            projects\r\n          </Link>\r\n        );\r\n      case \"contact\":\r\n        return (\r\n          <Link to=\"contact\" smooth={true} duration={300}>\r\n            contact\r\n          </Link>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"nb-container\"\r\n      style={{\r\n        borderBottom: `${\r\n          theme === \"light\" ? \"1px solid lightgrey\" : \"1px solid #232525\"\r\n        }`,\r\n        backgroundColor: `${theme === \"light\" ? \"white\" : \"#353535\"}`,\r\n        top: navBar ? 0 : -71,\r\n      }}\r\n    >\r\n      <HamMenu\r\n        theme={theme}\r\n        setTheme={setTheme}\r\n        getScrollLink={getScrollLink}\r\n      />\r\n      <div className=\"logo-container\">\r\n        <img src={logo} alt=\"logo\" onClick={directHome} />\r\n      </div>\r\n      <div className=\"nb-items-container\">\r\n        {navItems.map((item) => (\r\n          <div\r\n            className=\"nb-item-container\"\r\n            key={item.id}\r\n            style={{\r\n              color: `${theme === \"light\" ? \"#5F6368\" : \"#979797\"}`,\r\n            }}\r\n          >\r\n            {getSymbol(item.symbol)}\r\n            <div\r\n              className=\"nb-item\"\r\n              style={{\r\n                color: `${theme === \"light\" ? \"black\" : \"white\"}`,\r\n              }}\r\n            >\r\n              {getScrollLink(item.content)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"tb-container\">\r\n        <ToggleTheme theme={theme} setTheme={setTheme} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\nimport Projects from \"./Pages/Projects\";\nimport Contact from \"./Pages/Contact\";\nimport ContactBar from \"./Components/ContactBar\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst App = () => {\n  // Store whether the page is loading.\n  const [loading, setLoading] = useState<boolean>(true);\n\n  // Store theme.\n  const [theme, setTheme] = useState<string>(\"light\");\n\n  // If a theme was previously set by the user, set the theme to it.\n  useEffect(() => {\n    const storedTheme = localStorage.getItem(\"theme\");\n    if (storedTheme) {\n      setTheme(JSON.parse(storedTheme));\n    }\n  }, []);\n\n  // If the user switches the theme, store it in local storage.\n  useEffect(() => {\n    localStorage.setItem(\"theme\", JSON.stringify(theme));\n  }, [theme]);\n\n  // Scroll to the top of the webpage.\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\n    setLoading(true);\n  };\n\n  // When the page is reloaded, scroll the page to the top.\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", scrollTop);\n    setLoading(false);\n    return () => {\n      window.removeEventListener(\"beforeunload\", scrollTop);\n    };\n  }, []);\n\n  // Open github code for this web-app.\n  const redirect = () => {\n    window.open(\"https://github.com/wu-wilson/wu-wilson.github.io\");\n  };\n\n  /* If the page is still loading, return a blank page. Otherwise, \n  display the webpage. */\n  return loading ? null : (\n    <div className=\"app-container\">\n      <ContactBar theme={theme} />\n      <Navbar theme={theme} setTheme={setTheme} />\n      <Home theme={theme} />\n      <About theme={theme} />\n      <Projects theme={theme} />\n      <Contact theme={theme} />\n      <footer\n        className=\"footer\"\n        style={{\n          backgroundColor: `${theme === \"light\" ? \"white\" : \"#2D3133\"}`,\n          borderTop: `${\n            theme === \"light\" ? \"1px solid lightgrey\" : \"1px solid #232525\"\n          }`,\n        }}\n      >\n        <div\n          className=\"footer-text\"\n          onClick={redirect}\n          style={{\n            color: `${theme === \"light\" ? \"black\" : \"white\"}`,\n          }}\n        >\n          built this site with react! check out the code.\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}